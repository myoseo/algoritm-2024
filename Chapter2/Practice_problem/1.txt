다음 알고리즘들에 대해 입력의 크기와 기본 연산을 설명해 보라.
(1) 입력 리스트에서 가장 큰 항목을 찾는 알고리즘
리스트에 있는 n개의 수만 찾으면 되기 때문에 O(n)이다.
(2) 입력 리스트의 모든 숫자를 더하는 알고리즘
리스트에 있는 n개의 수만 더하면 되기 때문에 O(n)이다.
(3) n! 알고리즘
n만큼 더하기만 하면 되기 때문에 O(n)이다.
(4) 두 개의 nxn 행렬을 더하는 알고리즘
n x n에서 한 쪽이 n이 한가지 경우의 수를 구할 때 다른 n은 n만큼의 경우수를 봐야하기 때문에 n x n이 되어 O(n^2)이다.
(5) 유클리드 알고리즘(알고리즘 1.7)
 매 단계마다 입력의 크기를 절반으로 줄이기 때문에, 입력의 크기에 대한 지수적인 감소가 일어나게 됨. 따라서, 입력의 크기가 n일 때 알고리즘의 실행 시간은 O(log n)이다.
(6) 최대 공약수 알고리즘(알고리즘 1.5)
4번과 같은 방법인 하나의 리스트가 한 단계 올릴 때 다른 리스트는 n번 계산해야 하기 때문에 n x n이 되어 O(n^2)이다.
(7) 최대 공약수 알고리즘(알고리즘 1.6)
(6)번과 다르게 하나의 리스트를 n번을 여러번 돌려 비교하는 것이기 때문에 빅오 표기법에 따라 O(n)이다.
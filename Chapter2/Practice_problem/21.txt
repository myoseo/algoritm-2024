다음과 같은 순환 알고리즘이 주어졌다. 물음에 답하라 (박성서)
def mystery3(n)
    if n == 1 : return 1
    else : return mystery3(n-1) + 2 * n - 1
(1) 이 알고리즘의 반환값에 대한 순환 관계식을 만들고 풀어라. 이것은 무슨 알고리즘 인가?
R = R(n-1) + 2 * n -1 일때 n > 1이므로 R(1) = 1
2*(n-1)+2*(n-2)+.....2*1의합을 구해주는 반복 알고리즘알고리즘이다.

(2)기본연산으로 곱셈을 사용했을때의 복잡도를 수순환 관계식으로 만들고 풀어라. 시간 복잡도를 설명하라
T(n) = T(n-1) + 1
순환관계식에 의해 O(n)이다

(3)기본연산으로 덧셈과 뺄셈을 사용했을 때의 복잡도를 순환 관계식으로 만들고 풀어라 시간복잡도를 설명하라
T(n) = T(n-1) + 2  O(n)
순환관계식에 의해 O(n)이다